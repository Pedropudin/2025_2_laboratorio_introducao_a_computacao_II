#include <stdio.h>

// Função para calcular n^k de forma ineficiente e depois aplicar o módulo 1000
long long int potenciacao_ineficiente(int n, int k) {
    // Esta função é apenas para fins de demonstração e não funcionará
    // corretamente para grandes valores de k devido a estouro de inteiro.
    long long int resultado = 1;
    
    // Calcula n^k sem considerar o módulo em cada iteração
    for (int i = 0; i < k; i++) {
        resultado *= n;
    }

    // Aplica o módulo 1000 ao resultado final
    return resultado % 1000;
}

int main() {
    int n, k;
    
    // Leitura dos valores de n e k
    printf("Digite o valor de n (0 < n <= 99): ");
    scanf("%d", &n);
    printf("Digite o valor de k (0 < k <= 10): "); // Limitando k para evitar estouro
    scanf("%d", &k);

    // Calcula n^k de forma ineficiente e aplica o módulo 1000
    long long int resultado = potenciacao_ineficiente(n, k);

    // Imprime o resultado com três dígitos, adicionando zeros à esquerda se necessário
    printf("%03lld\n", resultado);

    return 0;
}